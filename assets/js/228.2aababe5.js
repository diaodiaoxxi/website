(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{1198:function(t,s,n){"use strict";n.r(s);var a=n(22),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"升级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#升级"}},[t._v("#")]),t._v(" 升级")]),t._v(" "),n("p",[t._v("我们认为，在进行工具升级之前，彻底删除掉 "),n("code",[t._v("h_ui-cli")]),t._v(" 是个不错的实践（如果安装过的话）。")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除全局安装的 h_ui-cli")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" remove h_ui-cli -gd\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),n("p",[t._v("如果不删除，工具升级之后，原有的功能也将无法使用")])]),t._v(" "),n("p",[t._v("在 1.x 中使用的命令行工具 "),n("code",[t._v("h_ui-cli")]),t._v(" 提供了有限的项目管理功能，包括项目创建和框架更新。")]),t._v(" "),n("p",[t._v("在 2.x 中，我们保留了此前一直在沿用的应用模版，类型为 "),n("code",[t._v("pro")]),t._v("，以取代 "),n("code",[t._v("h_ui-cli")]),t._v(" 提供的项目创建功能。运行以下命令可以创建 "),n("code",[t._v("pro")]),t._v(" 类型的应用模版：")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("$ hui create\n\n? 请选择要创建的项目类型: pro\n? 请输入要创建的项目名称: demo\n\n⚠ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("HUI"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 基于统一框架 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".x 创建的模版工程需要在创建结束之后执行 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -d 手动安装依赖！\n\nℹ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("HUI"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 创建项目 /Users/kawhi/Desktop/Projects/test/demo，这可能需要花点儿时间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n✔ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("HUI"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 项目 demo 创建完成！\n")])])]),n("p",[t._v("需要注意的是，"),n("code",[t._v("pro")]),t._v(" 类型的应用模版在开发与构建集成时与原项目保持一致，即：")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 依赖安装")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开发调试")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run dev\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 框架构建集成")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 子系统构建集成")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run child\n")])])]),n("h2",{attrs:{id:"关于-update-废弃"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于-update-废弃"}},[t._v("#")]),t._v(" 关于 update (废弃)")]),t._v(" "),n("p",[t._v("1.x 提供的框架更新功能基于这样一个前提，即：")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("框架提供的功能可以满足产品的需求，业务编码过程中不应该再对框架层的代码进行修改")]),t._v("。")])]),t._v(" "),n("p",[t._v("很显然，在大多数情况下，这是不可能的，框架本身就是业务产品的一部分。我们在 2.x 中废弃了该功能，理由如下：")]),t._v(" "),n("ol",[n("li",[t._v("框架本身是构成应用产品的一部分，实际的业务场景中不太可能将框架和业务部分完全区分开。")]),t._v(" "),n("li",[t._v("更新功能本质是文件的覆盖，在这个过程中会涉及到业务产品已经做过修改的文件覆盖，强行覆盖大概率是会出问题的。")]),t._v(" "),n("li",[t._v("更新是个完全可以替代的功能，通过文件比对工具进行手动覆盖升级更为可靠。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);