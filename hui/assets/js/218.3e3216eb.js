(window.webpackJsonp=window.webpackJsonp||[]).push([[218],{1186:function(t,a,s){"use strict";s.r(a);var n=s(22),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"应用模版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用模版"}},[t._v("#")]),t._v(" 应用模版")]),t._v(" "),s("p",[t._v("默认地，工具只提供了三种基本的应用模版，但支持开发者进行扩展。")]),t._v(" "),s("p",[t._v("一个自定义的应用模版是一个 npm 包，用户将模板集成到本地之后，在项目创建阶段会被 HUI CLI 自动发现，具体如下：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("? 请选择要创建的项目类型: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Use arrow keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n❯ app ------------- 基础业务应用模版, 支持独立运行和部署\n  frame ----------- 基础框架应用模版, 支持独立运行和部署，支持多系统集成\n  pro ------------- HUI "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(" 应用模版（遗留）\n  layout ---------- HUI "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v(" 对接操作员中心框架应用模版（自定义）\n")])])]),s("h2",{attrs:{id:"模版开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模版开发"}},[t._v("#")]),t._v(" 模版开发")]),t._v(" "),s("p",[t._v("在框架 2.0 中，一个自定义的应用模版包应该具有以下的功能：")]),t._v(" "),s("ul",[s("li",[t._v("渲染模版文件 - 有时需要依赖一些模版参数，这是一个基础的功能；")]),t._v(" "),s("li",[t._v("扩展 package.json - 为你的模版指定一些必须的依赖，你需要将它们添加到 "),s("code",[t._v("dependencies")]),t._v(" 部分时，这是一个有用的选项；")]),t._v(" "),s("li",[t._v("提示用户选择一个特定的选项 - 例如，你可以询问用户是否集成一个自定义的组件。")])]),t._v(" "),s("p",[t._v("模版包应该总是包含一个 "),s("code",[t._v("Generator")]),t._v(" 为主的导出，并且能够选择性的包含 "),s("code",[t._v("prompt")]),t._v(" 对话文件。")]),t._v(" "),s("p",[t._v("作为一个 npm 包，还必须有一个 package.json 文件，同时必须包含 "),s("code",[t._v("name")]),t._v(" 和 "),s("code",[t._v("description")]),t._v(" 字段，工具在解析模版的时候会读取这两个字段。")]),t._v(" "),s("p",[t._v("所以，一个自定义的模版目录结构看起来像下面这样：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── README.md\n├── template      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 模版文件目录（可选）")]),t._v("\n├── index.js      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Generator")]),t._v("\n├── package.json\n├── prompts.js    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# prompt 对话文件（可选）")]),t._v("\n")])])]),s("h3",{attrs:{id:"命名和可发现性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名和可发现性"}},[t._v("#")]),t._v(" 命名和可发现性")]),t._v(" "),s("p",[t._v("为了让一个自定义的应用模版在 HUI CLI 项目中被正常使用，它必须遵循 "),s("code",[t._v("@hui/boilerplates-")]),t._v(" 这样的命名惯例。这样你的插件才能够：")]),t._v(" "),s("ul",[s("li",[t._v("被 "),s("code",[t._v("@hui/boilerplates")]),t._v(" 模版服务发现；")]),t._v(" "),s("li",[t._v("通过 "),s("code",[t._v("hui boilerplate -a")]),t._v("安装。")])]),t._v(" "),s("p",[t._v("警告")]),t._v(" "),s("p",[t._v("确保模版的名字是正确的，否则它将无法被发现和管理")]),t._v(" "),s("p",[t._v("为了能够在项目创建阶段正常的显示和列举你的模版，你应该始终保证 "),s("code",[t._v("package.json")]),t._v(" 文件的 "),s("code",[t._v("name")]),t._v(" 和 "),s("code",[t._v("description")]),t._v(" 字段存在并且是有意义的。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@hui/boilerplates-layout"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HUI 2.0 对接操作员中心框架应用模版"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"generator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[t._v("#")]),t._v(" Generator")]),t._v(" "),s("p",[t._v("模版包应该始终保证在 "),s("code",[t._v("index.js")]),t._v(" 中存在 Generator 为主的到处，它通常在你想要为项目扩展包依赖，渲染对应的模版文件时需要。")]),t._v(" "),s("p",[t._v("在用户选择对应的模版进行项目创建时，generator 会被调用。一个 generator 应该始终包含一个接收 "),s("code",[t._v("api")]),t._v(" 作为参数的导出，具体如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("api")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// api 可以用来访问模版服务对外提供的功能，比如模版渲染和依赖扩展等")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"模版渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模版渲染"}},[t._v("#")]),t._v(" 模版渲染")]),t._v(" "),s("p",[t._v("当你调用 "),s("code",[t._v("api.render('./template')")]),t._v(" 时，该 generator 将会使用 "),s("a",{attrs:{href:"https://github.com/mde/ejs",target:"_blank",rel:"noopener noreferrer"}},[t._v("EJS"),s("OutboundLink")],1),t._v(" 渲染 "),s("code",[t._v("./template")]),t._v(" 中的文件 (相对于 generator 中的文件路径进行解析)。")]),t._v(" "),s("p",[t._v("在模板文件创建完之后，你应该在 generator 中添加 "),s("code",[t._v("api.render")]),t._v(" 调用：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("api")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./template"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"文件名的边界情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件名的边界情况"}},[t._v("#")]),t._v(" 文件名的边界情况")]),t._v(" "),s("p",[t._v("如果你想要渲染一个以点开头的模板文件 (例如 "),s("code",[t._v(".env")]),t._v(")，则需要遵循一个特殊的命名约定，因为以点开头的文件会在插件发布到 npm 的时候被忽略：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以点开头的模板需要使用下划线取代那个点：")]),t._v("\n/template/_env\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当调用 api.render('./template') 时，它在项目文件夹中将被渲染为：")]),t._v("\n/template/.env\n")])])]),s("p",[t._v("同时这也意味着当你想渲染以下划线开头的文件时，同样需要遵循一个特殊的命名约定：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这种模板需要使用两个下划线来取代单个下划线：")]),t._v("\n/template/__variables.scss\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当调用 api.render('./template') 时，它在项目文件夹中将被渲染为：")]),t._v("\n/template/_variable.scss\n")])])]),s("h3",{attrs:{id:"扩展包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展包"}},[t._v("#")]),t._v(" 扩展包")]),t._v(" "),s("p",[t._v("如果你需要向项目中添加 \b 额外的依赖，创建一个 npm 脚本或者修改 "),s("code",[t._v("package.json")]),t._v(" 的其他任何一处，你可以使用 API "),s("code",[t._v("extendPackage")]),t._v(" 方法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("api")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendPackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    dependencies"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hui-core"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0-beta.7"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在上面这个例子中，我们添加了一个依赖："),s("code",[t._v("hui-core")]),t._v("。在插件调用时，这个 npm 模块将被安装，这个依赖将被添加到用户项目的 "),s("code",[t._v("package.json")]),t._v(" 文件。")]),t._v(" "),s("p",[t._v("同样使用这个 API 我们可以添加新的 npm 任务到项目中。为了实现这个，我们需要定义一个任务名和一个命令，这样他才能够在用户 "),s("code",[t._v("package.json")]),t._v(" 文件的 "),s("code",[t._v("scripts")]),t._v(" 部分运行：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("api")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendPackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    scripts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      start"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hui dev"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"对话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对话"}},[t._v("#")]),t._v(" 对话")]),t._v(" "),s("p",[t._v("对话是当基于自定义模版创建项目的过程中需要与用户交互时需要的。所有的对话逻辑都存储在 "),s("code",[t._v("prompts.js")]),t._v(" 文件中。在模版服务内部，对话是通过 "),s("a",{attrs:{href:"https://github.com/SBoudrias/Inquirer.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("inquirer"),s("OutboundLink")],1),t._v(" 实现。")]),t._v(" "),s("p",[t._v("当用户选择你的模版进行项目创建时，如果模版包的根目录包含 "),s("code",[t._v("prompts.js")]),t._v("，它将在调用时被使用。这个文件应该导出一个"),s("a",{attrs:{href:"https://github.com/SBoudrias/Inquirer.js#question",target:"_blank",rel:"noopener noreferrer"}},[t._v("问题"),s("OutboundLink")],1),t._v("数组，具体如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prompts.js")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"confirm"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"autoRouting"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"是否使用内置的路由引擎自动处理路由关系？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在 generator 中，可以通过 "),s("code",[t._v("api.promptAnswers")]),t._v(" 访问答案对象。")]),t._v(" "),s("p",[t._v("对话可以有"),s("a",{attrs:{href:"https://github.com/SBoudrias/Inquirer.js#prompt-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("不同的类型"),s("OutboundLink")],1),t._v("，但是在 CLI 大多数使用的是 "),s("code",[t._v("checkbox")]),t._v(" 和 "),s("code",[t._v("confirm")]),t._v("。在上面的示例中，我们利用一个 "),s("code",[t._v("confirm")]),t._v(" 对话创建了一个有条件的"),s("a",{attrs:{href:"#%E6%A8%A1%E7%89%88%E6%B8%B2%E6%9F%93"}},[t._v("模板渲染")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"模版管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模版管理"}},[t._v("#")]),t._v(" 模版管理")]),t._v(" "),s("p",[t._v("执行 "),s("code",[t._v("boilerplate")]),t._v(" 命令可以查看当前环境中安装的应用模版，以及对指定的应用模版进行升级。具体如下：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ hui boilerplate -h\nhui boilerplate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("boilerplate-name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n查看和管理当前环境的应用模版\n\n选项：\n  --help, -h     显示帮助信息  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("布尔"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  --add, -a      在当前环境下安装应用模版  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  --list, -l     查看本地安装的应用模版  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("布尔"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  --remove, -r   删除本地安装的应用模版  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  --upgrade, -u  升级本地安装的应用模版，如果不指定参数将全部升级  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h4",{attrs:{id:"add-a"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-a"}},[t._v("#")]),t._v(" --add, -a")]),t._v(" "),s("p",[t._v("在当前环境下安装并注册应用模版，支持指定版本。具体如下：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ hui boilerplate -a layout\n$ hui boilerplate -a layout@latest\n")])])]),s("h4",{attrs:{id:"list-l"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list-l"}},[t._v("#")]),t._v(" --list, -l")]),t._v(" "),s("p",[t._v("查看本地安装的应用模版和版本。具体如下：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ hui boilerplate -l\n")])])]),s("h4",{attrs:{id:"remove-r"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remove-r"}},[t._v("#")]),t._v(" --remove, -r")]),t._v(" "),s("p",[t._v("删除本地安装的应用模版。具体如下：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ hui boilerplate -r layout\n")])])]),s("h4",{attrs:{id:"upgrade-u"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upgrade-u"}},[t._v("#")]),t._v(" --upgrade, -u")]),t._v(" "),s("p",[t._v("升级本地安装的应用模版，如果不指定参数将全部升级，具体如下：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ hui boilerplate -u "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一键升级所有的应用模版")]),t._v("\n$ hui boilerplate -u layout "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单独升级 layout 应用模版")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);