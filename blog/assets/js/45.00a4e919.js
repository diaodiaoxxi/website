(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{512:function(t,a,s){t.exports=s.p+"assets/img/clourse.f9dd29ff.png"},611:function(t,a,s){"use strict";s.r(a);var n=s(22),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),n("h2",{attrs:{id:"什么是闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包"}},[t._v("#")]),t._v(" 什么是闭包")]),t._v(" "),n("ol",[n("li",[t._v("闭包：在嵌套函数结构中，内部函数的作用域链中，始终保持对其父函数活动变量对象的引用。")]),t._v(" "),n("li",[t._v("高级程序设计书中，闭包就是有权访问另一个作用域中的变量的函数")]),t._v(" "),n("li",[t._v("按我的理解，闭包更重要的是一种技术或者是一种特行。在函数作用域下的变量在函数执行完之后，会自动销毁其执行上下文，进行垃圾回收。常规场景下，是无法访问函数内部的变量。闭包就是用\n来解决这类问题，在函数作用域内部，创建其内部函数，内部函数的作用域链中，始终保持对其父函数活动变量对象的引用。")]),t._v(" "),n("li",[t._v("实际的闭包指的是被持久化的函数以及它所保留的对外层变量的引用的组合。")]),t._v(" "),n("li",[t._v("常规场景下，当我们在调用某个函数时，其执行上下文生成的变量对象，会随着函数内可代码的执行完毕，而随之销毁出栈，进行垃圾回收。但当我们需要保留当前执行上下文中的活动变量对象时，（在外部需要访问当前的活动变量的属性时），我们需要在其颞部创建内部函数，内部函数的作用域需要保留对其父函数（当前函数）的活动变量对象的引用。同时，其内部函数也需要持久化。即：其内部函数需要被保存下来，不销毁。")]),t._v(" "),n("li",[t._v("总结：闭包包含两部分：1. 被持久化的内部函数 2. 内部函数作用域保留对外部函数活动变量对象的引用")]),t._v(" "),n("li",[t._v("--")]),t._v(" "),n("li",[t._v("闭包其实是在函数内部定义一个函数。")]),t._v(" "),n("li",[t._v("闭包在使用的时候不会释放外部的引用，闭包函数内部的值会得到保留。")]),t._v(" "),n("li",[t._v("闭包里面的匿名函数，读取变量的顺序，先读取本地变量，再读取父函数的局部变量。")]),t._v(" "),n("li",[t._v("对于闭包外部无法引用它内部的变量，因此在函数内部创建的变量执行完后会立刻释放资源，不污染全局对象。")]),t._v(" "),n("li",[t._v("闭包使用的时候要考虑到内存泄漏，因为不释放外部引用，但是合理的使用闭包是内存使用不是内存泄漏。")])]),t._v(" "),n("h2",{attrs:{id:"例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"极客时间"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" test1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" test2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" innerBar "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("setName")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            myName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newName\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getName")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" myName\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" innerBar\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"极客邦"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),n("p",[n("img",{attrs:{src:s(512),alt:"avatar"}})]),t._v(" "),n("ol",[n("li",[n("p",[t._v("当 JavaScript 引擎执行到 foo 函数时，首先会编译，并创建一个空执行上下文。")])]),t._v(" "),n("li",[n("p",[t._v("在编译过程中，遇到内部函数 setName，JavaScript 引擎还要"),n("code",[t._v("对内部函数做一次快速的词法扫描")]),t._v("，发现该内部函数引用了 foo 函数中的 myName 变量，由于是内部函数引用了外部函数的变量，所以 JavaScript 引擎判断这是一个闭包，于是在"),n("code",[t._v("堆空间")]),t._v("创建换一个“"),n("code",[t._v("closure(foo)")]),t._v("”的对象（这是一个内部对象，JavaScript 是无法访问的），用来保存 myName 变量")])]),t._v(" "),n("li",[n("p",[t._v("接着继续扫描到 getName 方法时，发现该函数内部还引用变量 test1，于是 JavaScript 引擎又将 test1 添加到“closure(foo)”对象中。这时候堆中的“closure(foo)”对象中就包含了 myName 和 test1 两个变量了")])]),t._v(" "),n("li",[n("p",[t._v("由于 test2 并没有被内部函数引用，所以 test2 依然保存在调用栈中")])]),t._v(" "),n("li",[n("p",[t._v("当执行到 foo 函数时，闭包就产生了；当 foo 函数执行结束之后，返回的 getName 和 setName 方法都引用“clourse(foo)”对象，所以即使 foo 函数退出了，“clourse(foo)”依然被其内部的 getName 和 setName 方法引用。所以在下次调用bar.setName或者bar.getName时，创建的执行上下文中就包含了“clourse(foo)”")])]),t._v(" "),n("li",[n("p",[t._v("总的来说，产生闭包的核心有两步：第一步是需要预扫描内部函数；第二步是把内部函数引用的外部变量保存到堆中。")])])]),t._v(" "),n("h2",{attrs:{id:"闭包的应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包的应用场景"}},[t._v("#")]),t._v(" 闭包的应用场景")]),t._v(" "),n("ol",[n("li",[t._v("模拟块级作用域")]),t._v(" "),n("li",[t._v("模拟对象的私有属性")]),t._v(" "),n("li",[t._v("使用回调函数")]),t._v(" "),n("li",[t._v("模块化")])])])}),[],!1,null,null,null);a.default=e.exports}}]);