(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{506:function(t,s,a){t.exports=a.p+"assets/img/GC.d807ca19.jpeg"},507:function(t,s,a){t.exports=a.p+"assets/img/Fullpause.9898646a.png"},628:function(t,s,a){"use strict";a.r(s);var n=a(22),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"垃圾回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收"}},[t._v("#")]),t._v(" 垃圾回收")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"极客邦"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"极客时间"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(506),alt:"avatar"}})]),t._v(" "),n("h2",{attrs:{id:"esp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#esp"}},[t._v("#")]),t._v(" ESP")]),t._v(" "),n("p",[t._v("ESP：记录当前执行状态的指针（指向当前执行上下文）")]),t._v(" "),n("p",[t._v("当 showName 函数执行完成之后，函数执行流程就进入了 foo 函数，JavaScript 会将 ESP 下移到 foo 函数的执行上下文，这个"),n("code",[t._v("下移操作就是销毁 showName 函数执行上下文的过程")]),t._v("。")]),t._v(" "),n("p",[t._v("上述过程，可销毁JavaScript中 栈 中的内存")]),t._v(" "),n("p",[t._v("要回收 堆 中的垃圾数据，就需要用到 JavaScript 中的垃圾回收器了")]),t._v(" "),n("h2",{attrs:{id:"v8垃圾回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v8垃圾回收"}},[t._v("#")]),t._v(" V8垃圾回收")]),t._v(" "),n("h3",{attrs:{id:"代际假说"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代际假说"}},[t._v("#")]),t._v(" 代际假说")]),t._v(" "),n("ul",[n("li",[t._v("第一个是大部分对象在内存中存在的时间很短，简单来说，就是很多对象一经分配内存，很快就变得不可访问；")]),t._v(" "),n("li",[t._v("第二个是不死的对象，会活得更久")])]),t._v(" "),n("h3",{attrs:{id:"垃圾回收流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收流程"}},[t._v("#")]),t._v(" 垃圾回收流程")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("标记活动对象、非活动对象。\n活动对象：还在使用的对象；非活动对象：可以进行垃圾回收的对象")])]),t._v(" "),n("li",[n("p",[t._v("回收非活动对象所占用的内存空间\n在所有对象都标记完成之后，统一清理内存中被标记为可垃圾回收的对象")])]),t._v(" "),n("li",[n("p",[t._v("整理内存。在回收内存后，会出现大量不连续的内存空间（"),n("code",[t._v("内存碎片")]),t._v("）\n当我们需要分配较大连续内存的时候，可能会出现内存不够用的情况")])])]),t._v(" "),n("h3",{attrs:{id:"新生代"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新生代"}},[t._v("#")]),t._v(" 新生代")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("特点：对象存活时间短，内存小，执行速度快，而且容易满")])]),t._v(" "),n("li",[n("p",[t._v("副垃圾回收器：负责新生代垃圾回收")])]),t._v(" "),n("li",[n("p",[t._v("使用 "),n("code",[t._v("Scavenge")]),t._v("算法")]),t._v(" "),n("ul",[n("li",[t._v("将新生代区域对半分成链各个区域，一个是 "),n("code",[t._v("对象区域")]),t._v("，一个是 "),n("code",[t._v("空闲区域")])]),t._v(" "),n("li",[t._v("新加入的对象会存放到 对象区域，当对象区域内存空间快存满的时候，就会进行一次垃圾回收")]),t._v(" "),n("li",[t._v("在垃圾回收过程中，对象区域中的 活动对象（即：存活的对象）复制到 空闲区域 中，并且对复制后的对象进行有序的排序，从而完成了 内存整理 的操作，空闲区域不存在内存碎片；")]),t._v(" "),n("li",[t._v("完成复制后，对象区域、内存区域进行角色翻转，也就是原来的对象区域变成空闲区域，原来的空闲区域变成了对象区域，这样就完成了垃圾回收。\n"),n("code",[t._v("角色翻转还能让这两块区域无限的重复用功下去")])]),t._v(" "),n("li",[t._v("由于 复制 需要时间成本，所以针对内存空间大的对象，就会造成垃圾清理时间过长，所以为了执行效率，一般新生区的空间会被设置得比较小；一般内存空间很大的对象会直接分配到老生代内存区域中")]),t._v(" "),n("li",[t._v("经过两次垃圾回收的内存对象，会采用 "),n("code",[t._v("对象晋升策略")]),t._v(",被移动到 老生代区域 中")])])])]),t._v(" "),n("h3",{attrs:{id:"老生代"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#老生代"}},[t._v("#")]),t._v(" 老生代")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("特点：对象存活时间长，内存大")])]),t._v(" "),n("li",[n("p",[t._v("主垃圾回收器：负责老生代垃圾回收")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("标记-清除")]),t._v(" 算法 Mark-Sweep")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("标记阶段：通过根元素递归遍历，将能到达的元素标记为 活动对象，不能到达的元素标记为 非活动对象（垃圾对象），并针对两个对象做标记区分")]),t._v(" "),n("p",[t._v("扩展说明：全局window对象看成是一个树状结构，垃圾回收时，V8会先遍历这颗树，能遍历到的元素说明还存活的，标记为活动对象！没有被标记到的说明已经没有被引用了。")])]),t._v(" "),n("li",[n("p",[t._v("清除标记为 垃圾对象 的内存空间；")])]),t._v(" "),n("li",[n("p",[t._v("缺点：出现大量不连续的内存空间（内存碎片）")])])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("标记-整理")]),t._v(" 算法 Mark-Compact")]),t._v(" "),n("ul",[n("li",[t._v("标记阶段过程与"),n("code",[t._v("标记-清除")]),t._v(" 算法一致")]),t._v(" "),n("li",[t._v("但后续步骤不是直接对可回收对象进行清理，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存")])])])]),t._v(" "),n("h3",{attrs:{id:"全停顿"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全停顿"}},[t._v("#")]),t._v(" 全停顿")]),t._v(" "),n("p",[t._v("V8使用副垃圾回收器、主垃圾回收器 处理垃圾回收。JavaScript运行在主线程上，一旦执行垃圾回收，都需要将正在执行的脚本 暂停，待垃圾回收完毕后，在执行js脚本——全停顿（Stop-The-World）")]),t._v(" "),n("p",[n("img",{attrs:{src:a(507),alt:"avatar"}})]),t._v(" "),n("ol",[n("li",[n("p",[n("code",[t._v("增量-标记")]),t._v("（Incremental Marking）算法")]),t._v(" "),n("ul",[n("li",[t._v("为了降低老生代的垃圾回收而造成的卡顿，V8 将标记过程分为一个个的子标记过程，同时让垃圾回收标记和 JavaScript 应用逻辑交替进行，直到标记阶段完成")]),t._v(" "),n("li",[t._v("使用增量标记算法，可以把一个完整的垃圾回收任务拆分为很多小的任务，这些小的任务执行时间比较短，可以穿插在其他的 JavaScript 任务中间执行，这样当执行上述动画效果时，就不会让用户因为垃圾回收任务而感受到页面的卡顿了")])])])]),t._v(" "),n("h2",{attrs:{id:"常见的内存泄漏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见的内存泄漏"}},[t._v("#")]),t._v(" 常见的内存泄漏")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("意外的全局变量")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Actually, I\'m a global variable"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Actually, I\'m a global variable"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("在非严格模式下，当我们在一个函数中给一个变量赋值但是却没有声明它")]),t._v(" "),n("li",[t._v("在非严格模式下，使用 this(指向 window)，声明变量")])])]),t._v(" "),n("li",[n("p",[t._v("被遗忘的计时器或回调函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" serverData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" renderer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'renderer'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      renderer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serverData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])]),t._v(" "),n("li",[n("p",[t._v("对象观察者")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("element")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    element"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTMl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I\'m innerHTML"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nbtn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onClick"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),n("p",[t._v("因为老版本的 IE 是无法检测 DOM 节点与 JavaScript 代码之间的循环引用，会导致内存泄漏")])]),t._v(" "),n("li",[n("p",[t._v("脱离DOM的引用")]),t._v(" "),n("p",[t._v("如果把DOM 存成字典（JSON 键值对）或者数组，此时，同样的 DOM 元素存在两个引用：一个在 DOM 树中，另一个在字典中。那么将来需要把两个引用都清除")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在对象中引用DOM")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" elements "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      btn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomeThing")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      elements"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("btn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeBtn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将body中的btn移除, 也就是移除 DOM树中的btn")]),t._v("\n      document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'button'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是此时全局变量elements还是保留了对btn的引用, btn还是存在于内存中,不能被GC回收")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("可以手动将引用给清除: elements.btn = null.")])]),t._v(" "),n("li",[n("p",[t._v("闭包\n闭包中重复创建的变量")])])]),t._v(" "),n("h2",{attrs:{id:"内存泄漏的调试方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏的调试方法"}},[t._v("#")]),t._v(" 内存泄漏的调试方法")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Performance")]),t._v(" 面板 勾选 "),n("code",[t._v("Memory")])]),t._v(" "),n("li",[n("code",[t._v("Memory")]),t._v(" 面板，快照对比")]),t._v(" "),n("li",[n("code",[t._v("Node")]),t._v(" 中 "),n("code",[t._v("process.memoryUsage")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);